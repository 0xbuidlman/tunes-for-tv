/*
 * Copyright (C) 2015 Jacob Klinker
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'com.getkeepsafe.dexcount'

android {
    compileSdkVersion Integer.parseInt(project.COMPILE_SDK)
    buildToolsVersion project.BUILD_TOOLS_VERSION

    defaultConfig {
        useJack = false
        applicationId "com.klinker.android.spotify"
        minSdkVersion Integer.parseInt(project.MIN_SDK)
        targetSdkVersion Integer.parseInt(project.TARGET_SDK)
        versionCode Integer.parseInt(project.VERSION_CODE)
        versionName project.VERSION_NAME
    }

    if (file("../debug.keystore").exists()) {
        signingConfigs {
            debug {
                storeFile file("../debug.keystore")
                storePassword "android"
                keyAlias "androiddebugkey"
                keyPassword "android"
            }
            release {
                storeFile file("../release.keystore")
                storePassword "klinker1127"
                keyAlias "spotify"
                keyPassword "klinker1127"
            }
        }

        buildTypes {
            release {
                minifyEnabled true
                shrinkResources true
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
                signingConfig signingConfigs.release
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_6
        targetCompatibility JavaVersion.VERSION_1_6
    }

    lintOptions {
        abortOnError false
    }

    useLibrary 'org.apache.http.legacy'
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    testCompile 'junit:junit:4.12'
    testCompile 'org.robolectric:robolectric:3.0'
    testCompile 'org.mockito:mockito-all:1.9.5'
    testCompile 'org.powermock:powermock-mockito-release-full:1.6.0'

    provided 'org.projectlombok:lombok:1.14.8'

    compile "com.android.support:leanback-v17:22.2.1"
    compile "com.android.support:recyclerview-v7:22.2.1"
    compile 'com.android.support:support-v4:22.2.1'
    compile 'com.squareup.picasso:picasso:2.4.1-SNAPSHOT'
    compile 'com.spotify.sdk:spotify-player:1.0.0-beta10@aar'
    compile 'com.squareup.retrofit:retrofit:1.9.0'
    compile 'com.squareup.okhttp:okhttp:2.2.0'
    compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.4'
}
